import telebot
from telebot import types
import random

bot = telebot.TeleBot('7595013592:AAGMHdGhfz7MaxGlyLEaCIJEZwlJN4XFIYA')

todo_list = []  

random_facts = [
    "‚ö° –ú–æ–ª–Ω–∏—è —É–¥–∞—Ä—è–µ—Ç –≤ –ó–µ–º–ª—é –æ–∫–æ–ª–æ 100 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É.",
    "üêò –°–ª–æ–Ω—ã –º–æ–≥—É—Ç —É–∑–Ω–∞–≤–∞—Ç—å —Å–µ–±—è –≤ –∑–µ—Ä–∫–∞–ª–µ.",
    "ü¶à –ê–∫—É–ª—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∏ –Ω–∞ –ó–µ–º–ª–µ —Ä–∞–Ω—å—à–µ, —á–µ–º –¥–µ—Ä–µ–≤—å—è.",
    "üåå –í—Å–µ–ª–µ–Ω–Ω–∞—è —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —Å–≤–µ—Ç–∞.",
    "üöÄ –í –∫–æ—Å–º–æ—Å–µ –Ω–µ–ª—å–∑—è —Å–ª—ã—à–∞—Ç—å –∑–≤—É–∫–∏ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã."
] * 20  

quiz_questions = {
    "‚ùì –°–∫–æ–ª—å–∫–æ –∫–æ—Å—Ç–µ–π –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º —Ç–µ–ª–µ?": "206",
    "üéµ –ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª 9-—é —Å–∏–º—Ñ–æ–Ω–∏—é?": "–ë–µ—Ç—Ö–æ–≤–µ–Ω",
    "‚öΩ –ö–∞–∫–∞—è —Å—Ç—Ä–∞–Ω–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ –ø–µ—Ä–≤—ã–π —á–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞ –ø–æ —Ñ—É—Ç–±–æ–ª—É?": "–£—Ä—É–≥–≤–∞–π",
    "üî¨ –ö—Ç–æ –æ—Ç–∫—Ä—ã–ª –∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è?": "–ù—å—é—Ç–æ–Ω",
    "üìñ –ö–∞–∫–æ–π —Å–∞–º—ã–π –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã–π —Ä–æ–º–∞–Ω –≤ –º–∏—Ä–µ?": "–î–æ–Ω –ö–∏—Ö–æ—Ç"
}  

motivational_quotes = [
    "üî• –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ —É—Å–ø–µ—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞ —É–≥–ª–æ–º.",
    "üí° –í–µ–ª–∏–∫–∏–µ –≤–µ—â–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤.",
    "üöÄ –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∏—á—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ ‚Äî —ç—Ç–æ –ø–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –æ–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ.",
    "üèÜ –¢—ã –Ω–µ –ø—Ä–æ–∏–≥—Ä–∞–µ—à—å, –µ—Å–ª–∏ –Ω–µ —Å–¥–∞—à—å—Å—è.",
    "üåü –£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ 1% —Ç–∞–ª–∞–Ω—Ç–∞ –∏ 99% —Ç—Ä—É–¥–∞."
] * 20  

user_quiz_answers = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª")
    btn3 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
    btn4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É")
    btn5 = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Çü§ñ", reply_markup=markup)

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(
        message.chat.id,
        "<b>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥</b>\n"
        "/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help - –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥\n"
        "/todo - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á\n"
        "/schedule - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n"
        "/random_fact - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "/quiz - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞\n"
        "/motivation - –ú–æ—Ç–∏–≤–∞—Ü–∏—è",
        parse_mode='HTML'
    )

@bot.message_handler(commands=['todo'])
def todo(message):
    if todo_list:
        bot.send_message(message.chat.id, "üìå –¢–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:\n" + "\n".join(todo_list))
    else:
        bot.send_message(message.chat.id, "‚úÖ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á!")

@bot.message_handler(commands=['schedule'])
def schedule(message):
    schedule_text = (
        "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n"
        "1Ô∏è‚É£ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äì –∑–∞–ª\n"
        "2Ô∏è‚É£ –í—Ç–æ—Ä–Ω–∏–∫ ‚Äì —á–∏–ª–ª\n"
        "3Ô∏è‚É£ –°—Ä–µ–¥–∞ ‚Äì –∑–∞–ª\n"
        "4Ô∏è‚É£ –ß–µ—Ç–≤–µ—Ä–≥ ‚Äì —á–∏–ª–ª\n"
        "5Ô∏è‚É£ –ü—è—Ç–Ω–∏—Ü–∞ ‚Äì –∑–∞–ª\n"
        "6Ô∏è‚É£ –°—É–±–±–æ—Ç–∞ ‚Äì —à–∞–≥+—á–∏–ª–ª\n"
        "7Ô∏è‚É£ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ‚Äì —á–∏–ª–ª"
    )
    bot.send_message(message.chat.id, schedule_text)

@bot.message_handler(commands=['random_fact'])
def random_fact(message):
    fact = random.choice(random_facts)
    bot.send_message(message.chat.id, f"üîé –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:\n{fact}")

@bot.message_handler(commands=['quiz'])
def quiz(message):
    question, answer = random.choice(list(quiz_questions.items()))
    user_quiz_answers[message.chat.id] = answer.lower()  
    bot.send_message(message.chat.id, f"üß† –í–æ–ø—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:\n{question}")
    bot.register_next_step_handler(message, check_quiz_answer)

def check_quiz_answer(message):
    correct_answer = user_quiz_answers.get(message.chat.id, "").lower()
    user_answer = message.text.strip().lower()

    if user_answer == correct_answer:
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!")
    else:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer.capitalize()}")

@bot.message_handler(commands=['motivation'])
def motivation(message):
    quote = random.choice(motivational_quotes)
    bot.send_message(message.chat.id, f"üåü –ú–æ—Ç–∏–≤–∞—Ü–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{quote}")

@bot.message_handler(content_types=['text'])
def get_message(message):
    if message.text == '–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç‚úåÔ∏è")
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")

    elif message.text == 'help' or message.text == '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥':
        help_command(message)

    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª':
        todo(message)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É':
        send = bot.send_message(message.chat.id, 'üìù –í–ø–∏—à–∏ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É:')
        bot.register_next_step_handler(send, add_task)

    elif message.text == '–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É':
        send = bot.send_message(message.chat.id, 'üóë –ù–∞–ø–∏—à–∏ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å:')
        bot.register_next_step_handler(send, remove_task)

    elif message.text.lower() in ['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '/schedule']:
        schedule(message)

    else:
        bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇÔ∏è –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É, –Ω–∞–∂–º–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É")

def add_task(message):
    todo_list.append(message.text)
    bot.send_message(message.chat.id, f"‚úÖ –ó–∞–¥–∞—á–∞ '{message.text}' –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

def remove_task(message):
    task = message.text
    if task in todo_list:
        todo_list.remove(task)
        bot.send_message(message.chat.id, f"üóë –ó–∞–¥–∞—á–∞ '{task}' —É–¥–∞–ª–µ–Ω–∞!")
    else:
        bot.send_message(message.chat.id, f"‚ùå –ó–∞–¥–∞—á–∞ '{task}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ!")

bot.polling(none_stop=True)
